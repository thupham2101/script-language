/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */

PARSER_BEGIN(test)

public class test
{}

PARSER_END(test)

SKIP :
{
  "\r"
| "\t"
| "\n"
}

TOKEN : /* action */
{
   < CREATE: "create" | "CREATE" >
| < UPDATE : "update" | "UPDATE" >
|  < SET : "set" | "SET" >
| < LINK : "link" | "LINK" >
//|  < TABLE: (< STRING >) >
|  < TABLE: "Car" | "Person" >
}


TOKEN :
{
  < NUMBER : (<DIGIT>)+  >
| <STRING: (< LETTER >)+ >
| < SPACE: " " >
| < LEFT_PAREN : "(" >
| < RIGHT_PAREN : ")" >
| < COMMA : "," >
|  < SEMICOLON : ";" >
| < ASSIGN : "=" >
|  < QUOTE_MARK: "'" >
}


TOKEN :
{
  <#DIGIT: ["0"-"9"]>
| <#LETTER: ["a"-"z", "A"-"Z"]>
}


int start() :
{}
{
  main()   
  {
    return 0;  // returns 0 on successful parse
  }
}



void main() :
{}
{
   create_action()
|  update_action()

}


void create_action() :
{}
{
  
  < CREATE > < SPACE > < NUMBER > <SPACE > <TABLE > < SEMICOLON >
}

void update_action() :
{}
{
  < UPDATE > < SPACE > table() < SPACE > set_action() < SEMICOLON >
}
// table() appear first, so define the table() above the set_action()

void table() :
{}
{
  < STRING >
}

void set_action() :
{}
{
  < SET > <SPACE > <LEFT_PAREN > assign()
	(
	  < COMMA > assign()	)*
     < RIGHT_PAREN> 
}

void assign():
{}
{
  <STRING > <SPACE > <ASSIGN > < SPACE > <QUOTE_MARK > <STRING > <QUOTE_MARK >
}

void symbol() :
{Token t;
}
{
  t= < CREATE >
  {
    // Not necessary for parser construction - debugging code
    System.out.println("matched action: "+t);
  }
| 
  t= < NUMBER >
  {
    System.out.println("matched number: "+t);
  }
| 
  t= < STRING >
  {
    System.out.println("matched string: "+t);
  }
}